name: CI/CD Pipeline

on:
  push:
    branches:
      - Deployment

permissions:
  contents: write
  actions: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Check out the repo
        uses: actions/checkout@v2

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

            # Grant execute permissions to Gradle wrapper
      - name: Grant execute permissions to Gradle wrapper
        run: chmod +x ./gradlew

      # Build the application with Gradle first
      - name: Build with Gradle
        run: ./gradlew build

      # List build/libs to verify the JAR file exists
      - name: List build/libs directory
        run: ls -al build/libs  # Debug step to check if the JAR file exists

      # Calculate new version after the JAR is built
      - name: Calculate new version
        run: |
          # Read the current version from version.properties
          VERSION=$(cat version.properties | cut -d'=' -f2)
          
          # Increment the version
          NEW_VERSION=$(echo $VERSION | awk -F. '{$NF++;print $0}' OFS='.')
          
          # Update version.properties with the new version
          echo "version=$NEW_VERSION" > version.properties
          echo "New version: $NEW_VERSION"
          
          # Git configuration
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
          # Commit the new version to version.properties
          git add version.properties
          git commit -m "Bump version to $NEW_VERSION"
          
          # Push the changes to the Deployment branch
          git remote set-url origin https://${{ secrets.GH_PAT }}@github.com/VisiMihasi/JobPortal.git
          git push origin HEAD:Deployment --force
          
          # Set the new version as environment variable for use in the Docker build step
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Grant execute permissions to Gradle wrapper
      - name: Grant execute permissions to Gradle wrapper
        run: chmod +x ./gradlew

      # Build and push Docker image with the correct version
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./DOCKER/Dockerfile
          push: true
          tags: visimihasi/job-portal:${{ env.NEW_VERSION }}
          build-args: |
            JAR_FILE=job-portal-${{ env.NEW_VERSION }}.jar  # Pass the correct JAR file name as an argument

      # Output the new version
      - name: Output new version
        run: echo "The new Docker image version is ${{ env.NEW_VERSION }}"
