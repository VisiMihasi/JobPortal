name: CI/CD Pipeline

on:
  push:
    branches:
      - Deployment

permissions:
  contents: write
  actions: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Check out the repo
        uses: actions/checkout@v2

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      # Grant execute permissions to Gradle wrapper
      - name: Grant execute permissions to Gradle wrapper
        run: chmod +x ./gradlew

      # Build the application with Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Calculate new version
      - name: Calculate new version
        run: |
          VERSION=$(cat version.properties | cut -d'=' -f2)
          NEW_VERSION=$(echo $VERSION | awk -F. '{$NF++;print $0}' OFS='.')
          echo "version=$NEW_VERSION" > version.properties
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Grant execute permissions to Gradle wrapper
      - name: Grant execute permissions to Gradle wrapper
        run: chmod +x ./gradlew

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: visimihasi/job-portal:${{ env.NEW_VERSION }}
          build-args: JAR_FILE=job-portal-${{ env.NEW_VERSION }}.jar

      # Commit and push new version number
      - name: Commit new version and push
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add version.properties
          git commit -m "Bump version to $NEW_VERSION"
          git push

      # Output the new version
      - name: Output new version
        run: echo "The new Docker image version is ${{ env.NEW_VERSION }}"
